[{"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/index.tsx":"1","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/reportWebVitals.ts":"2","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/App.tsx":"3","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx":"4","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/services/TodoService.ts":"5","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/models/TodoEntity.ts":"6","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/components/DeleteConfirmationDialog.jsx":"7","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoEdit.jsx":"8","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/components/ui/TodoComponent.jsx":"9","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoCreate.jsx":"10"},{"size":554,"mtime":1691428569161,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1691428569161,"results":"13","hashOfConfig":"12"},{"size":568,"mtime":1691441778149,"results":"14","hashOfConfig":"12"},{"size":4896,"mtime":1691442928913,"results":"15","hashOfConfig":"12"},{"size":1416,"mtime":1691441164069,"results":"16","hashOfConfig":"12"},{"size":119,"mtime":1691433245393,"results":"17","hashOfConfig":"12"},{"size":650,"mtime":1691436209511,"results":"18","hashOfConfig":"12"},{"size":1256,"mtime":1691442393081,"results":"19","hashOfConfig":"12"},{"size":2172,"mtime":1691440740531,"results":"20","hashOfConfig":"12"},{"size":752,"mtime":1691441551388,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"17guw5g",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/index.tsx",[],[],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/reportWebVitals.ts",[],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/App.tsx",["58"],[],"import React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport TodoList from './pages/TodoList';\nimport TodoEdit from './pages/TodoEdit';\nimport TodoCreate from './pages/TodoCreate';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/list\" element={<TodoList />} />\n        <Route path=\"/edit/:id\" element={<TodoEdit/>} />\n        <Route path=\"/create\" element={<TodoCreate/>} />\n      </Routes>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx",["59","60","61","62","63"],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/services/TodoService.ts",[],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/models/TodoEntity.ts",[],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/components/DeleteConfirmationDialog.jsx",["64"],[],"import React, { useState } from 'react';\nimport { Dialog, DialogActions, DialogContent, Button } from '@mui/material';\n\nconst DeleteConfirmationDialog = ({ open, onClose, onConfirm }) => {\n    return (\n      <Dialog open={open} onClose={onClose}>\n        <DialogContent>\n          Silme işlemini onaylıyor musunuz?\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            Hayır\n          </Button>\n          <Button onClick={onConfirm} color=\"secondary\">\n            Evet\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  };\n  \n  export default DeleteConfirmationDialog;",[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoEdit.jsx",["65","66","67","68","69"],[],"import React, { useEffect, useState } from 'react';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { TextField, Checkbox, Button, Grid, Paper } from '@mui/material';\nimport TodoComponent from '../components/ui/TodoComponent';\n\nconst TodoEdit = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [todo, setTodo] = useState(null);\n\n    useEffect(() => {\n        const fetchTodo = async () => {\n            try {\n\n                const fetchedTodo = await todoService.getTodoById(id);\n\n                setTodo(fetchedTodo);\n            } catch (error) {\n                console.error('Todo verisi çekilirken hata oluştu:', error);\n            }\n        };\n        fetchTodo();\n    }, [id]);\n\n    const handleSave = async (updatedTodo: TodoEntity) => {\n        await todoService.updateTodo(id, updatedTodo);\n        navigate('/list');\n      };\n\n    if (!todo) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <h2>Todo Düzenle: {todo.title}</h2>\n            <TodoComponent initialValues={todo} onSubmit={handleSave} />\n        </div>\n    );\n};\n\nexport default TodoEdit;","/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/components/ui/TodoComponent.jsx",[],[],"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoCreate.jsx",["70","71","72","73","74","75"],[],"import React, { useState } from 'react';\nimport { TextField, Checkbox, Button, Grid, Paper } from '@mui/material';\nimport TodoEntity from '../models/TodoEntity';\nimport { useNavigate } from 'react-router-dom';\nimport todoService from '../services/TodoService';\nimport TodoComponent from '../components/ui/TodoComponent';\n\nconst TodoCreate = () => {\n    const navigate = useNavigate();\n\n    const handleSave = async (newTodo: TodoEntity) => {\n        await todoService.createTodo(newTodo);\n        navigate('/list');\n    };\n\n    return (\n        <div>\n            <h2>\n                Yeni Todo Oluştur\n            </h2>\n            <TodoComponent initialValues={{}} onSubmit={handleSave} />\n        </div>\n\n    );\n};\n\nexport default TodoCreate;\n\n\n\n\n\n\n",{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"80","severity":1,"message":"82","line":4,"column":20,"nodeType":"78","messageId":"79","endLine":4,"endColumn":26},{"ruleId":"80","severity":1,"message":"83","line":4,"column":28,"nodeType":"78","messageId":"79","endLine":4,"endColumn":41},{"ruleId":"80","severity":1,"message":"84","line":4,"column":43,"nodeType":"78","messageId":"79","endLine":4,"endColumn":56},{"ruleId":"80","severity":1,"message":"85","line":5,"column":32,"nodeType":"78","messageId":"79","endLine":5,"endColumn":53},{"ruleId":"80","severity":1,"message":"86","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"80","severity":1,"message":"88","line":5,"column":21,"nodeType":"78","messageId":"79","endLine":5,"endColumn":29},{"ruleId":"80","severity":1,"message":"89","line":5,"column":31,"nodeType":"78","messageId":"79","endLine":5,"endColumn":37},{"ruleId":"80","severity":1,"message":"90","line":5,"column":39,"nodeType":"78","messageId":"79","endLine":5,"endColumn":43},{"ruleId":"80","severity":1,"message":"91","line":5,"column":45,"nodeType":"78","messageId":"79","endLine":5,"endColumn":50},{"ruleId":"80","severity":1,"message":"86","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"80","severity":1,"message":"87","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":19},{"ruleId":"80","severity":1,"message":"88","line":2,"column":21,"nodeType":"78","messageId":"79","endLine":2,"endColumn":29},{"ruleId":"80","severity":1,"message":"89","line":2,"column":31,"nodeType":"78","messageId":"79","endLine":2,"endColumn":37},{"ruleId":"80","severity":1,"message":"90","line":2,"column":39,"nodeType":"78","messageId":"79","endLine":2,"endColumn":43},{"ruleId":"80","severity":1,"message":"91","line":2,"column":45,"nodeType":"78","messageId":"79","endLine":2,"endColumn":50},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-unused-vars","'TodoEntity' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'GridValueGetterParams' is defined but never used.","'useState' is defined but never used.","'TextField' is defined but never used.","'Checkbox' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Paper' is defined but never used."]