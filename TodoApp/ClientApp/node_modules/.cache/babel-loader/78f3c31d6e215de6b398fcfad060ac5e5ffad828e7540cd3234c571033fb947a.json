{"ast":null,"code":"var _jsxFileName = \"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await todoService.getTodos();\n        setTodos(fetchedTodos);\n      } catch (error) {\n        console.error('Todo verileri çekilirken hata oluştu:', error);\n      }\n    };\n    fetchTodos();\n  }, []);\n  const handleDelete = id => {\n    // Silme işlemini gerçekleştirin\n  };\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 70\n  }, {\n    field: 'title',\n    headerName: 'Başlık',\n    width: 250\n  }, {\n    field: 'isCompleted',\n    headerName: 'Tamamlandı',\n    width: 120,\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: params.value ? 'primary' : 'secondary',\n      children: params.value ? 'Evet' : 'Hayır'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: 'actions',\n    headerName: 'İşlemler',\n    width: 150,\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        children: \"D\\xFCzenle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => handleDelete(params.row.id),\n        children: \"Sil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: todos,\n      columns: columns,\n      pageSize: 5,\n      disableSelectionOnClick: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","todoService","TodoEntity","DataGrid","GridColDef","Button","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","fetchTodos","fetchedTodos","getTodos","error","console","handleDelete","id","columns","field","headerName","width","renderCell","params","variant","color","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","row","style","height","rows","pageSize","disableSelectionOnClick","_c","$RefreshReg$"],"sources":["/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\nimport { DataGrid, GridColDef } from '@mui/x-data-grid';\nimport Button from '@mui/material/Button';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    \n    const fetchTodos = async () => {\n      try {\n        const fetchedTodos = await todoService.getTodos();\n        setTodos(fetchedTodos);\n      } catch (error) {\n        console.error('Todo verileri çekilirken hata oluştu:', error);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleDelete = (id) => {\n    // Silme işlemini gerçekleştirin\n  };\n\n  const columns: GridColDef[] = [\n    { field: 'id', headerName: 'ID', width: 70 },\n    { field: 'title', headerName: 'Başlık', width: 250 },\n    {\n      field: 'isCompleted',\n      headerName: 'Tamamlandı',\n      width: 120,\n      renderCell: (params) => (\n        <Button variant=\"outlined\" color={params.value ? 'primary' : 'secondary'}>\n          {params.value ? 'Evet' : 'Hayır'}\n        </Button>\n      ),\n    },\n    {\n      field: 'actions',\n      headerName: 'İşlemler',\n      width: 150,\n      renderCell: (params) => (\n        <div>\n          <Button variant=\"outlined\" color=\"primary\">\n            Düzenle\n          </Button>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={() => handleDelete(params.row.id)}>\n            Sil\n          </Button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={todos} columns={columns} pageSize={5} disableSelectionOnClick />\n    </div>\n  );\n};\n\nexport default TodoList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}