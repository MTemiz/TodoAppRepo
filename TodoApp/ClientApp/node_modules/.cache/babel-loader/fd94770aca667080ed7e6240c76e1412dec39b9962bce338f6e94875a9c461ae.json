{"ast":null,"code":"var _jsxFileName = \"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoEdit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoEdit = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [todo, setTodo] = useState < TodoEntity | null > null;\n  useEffect(() => {\n    const fetchTodo = async () => {\n      try {\n        const fetchedTodo = await todoService.getTodoById(id);\n        setTodo(fetchedTodo);\n      } catch (error) {\n        console.error('Todo verisi çekilirken hata oluştu:', error);\n      }\n    };\n    fetchTodo();\n  }, [id]);\n  if (!todo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Todo D\\xFCzenle: \", todo.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoEdit, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = TodoEdit;\nexport default TodoEdit;\nvar _c;\n$RefreshReg$(_c, \"TodoEdit\");","map":{"version":3,"names":["React","useEffect","useState","useParams","todoService","TodoEntity","jsxDEV","_jsxDEV","TodoEdit","_s","id","todo","setTodo","fetchTodo","fetchedTodo","getTodoById","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoEdit.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\n\nconst TodoEdit = () => {\n    const { id } = useParams();\n    const [todo, setTodo] = useState<TodoEntity | null>(null);\n  \n    useEffect(() => {\n      const fetchTodo = async () => {\n        try {\n          const fetchedTodo = await todoService.getTodoById(id);\n          setTodo(fetchedTodo);\n        } catch (error) {\n          console.error('Todo verisi çekilirken hata oluştu:', error);\n        }\n      };\n  \n      fetchTodo();\n    }, [id]);\n  \n    if (!todo) {\n      return <div>Loading...</div>;\n    }\n  \n    return (\n      <div>\n        <h2>Todo Düzenle: {todo.title}</h2>\n        {/* Düzenleme formunu burada oluşturun */}\n      </div>\n    );\n  };\n  \n  export default TodoEdit;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,GAACG,UAAU,GAAG,IAAI,GAAE,IAAK;EAEzDJ,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMV,WAAW,CAACW,WAAW,CAACL,EAAE,CAAC;QACrDE,OAAO,CAACE,WAAW,CAAC;MACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEf,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAAW,QAAA,GAAI,mBAAc,EAACP,IAAI,CAACY,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhC,CAAC;AAEV,CAAC;AAACb,EAAA,CA3BED,QAAQ;EAAA,QACKL,SAAS;AAAA;AAAAqB,EAAA,GADtBhB,QAAQ;AA6BZ,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}