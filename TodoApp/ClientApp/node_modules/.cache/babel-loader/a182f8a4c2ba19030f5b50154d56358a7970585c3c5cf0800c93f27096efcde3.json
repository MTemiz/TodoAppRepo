{"ast":null,"code":"var _jsxFileName = \"/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  const [todos, setTodos] = useState < Array < ITodoEntity >> null;\n\n  // useEffect(() => {\n\n  //   const fetchTodos = async () => {\n  //     try {\n  //       const fetchedTodos = await todoService.getTodos();\n  //       setTodos(fetchedTodos);\n  //     } catch (error) {\n  //       console.error('Todo verileri çekilirken hata oluştu:', error);\n  //     }\n  //   };\n\n  //   fetchTodos();\n  // }, todos);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo Listesi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.title, \" - \", todo.isCompleted ? 'Tamamlandı' : 'Tamamlanmadı']\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","todoService","TodoEntity","jsxDEV","_jsxDEV","TodoList","todos","setTodos","Array","ITodoEntity","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","title","isCompleted","id","_c","$RefreshReg$"],"sources":["/Users/mesut/Projects/TodoApp/TodoApp/ClientApp/src/pages/TodoList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport todoService from '../services/TodoService';\nimport TodoEntity from '../models/TodoEntity';\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState<Array<ITodoEntity>>(null);\n\n  // useEffect(() => {\n    \n  //   const fetchTodos = async () => {\n  //     try {\n  //       const fetchedTodos = await todoService.getTodos();\n  //       setTodos(fetchedTodos);\n  //     } catch (error) {\n  //       console.error('Todo verileri çekilirken hata oluştu:', error);\n  //     }\n  //   };\n\n  //   fetchTodos();\n  // }, todos);\n\n  return (\n    <div>\n      <h1>Todo Listesi</h1>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            {todo.title} - {todo.isCompleted ? 'Tamamlandı' : 'Tamamlanmadı'}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,UAAU,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,GAACQ,KAAK,GAACC,WAAW,IAAG,IAAK;;EAE5D;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBV,OAAA;MAAAM,QAAA,EACGJ,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdZ,OAAA;QAAAM,QAAA,GACGM,IAAI,CAACC,KAAK,EAAC,KAAG,EAACD,IAAI,CAACE,WAAW,GAAG,YAAY,GAAG,cAAc;MAAA,GADzDF,IAAI,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACM,EAAA,GA7BIf,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}